#include<stdio.h>
#include<math.h>
#include<malloc.h>

char bin2ascii(char bin[9]);
char* cogerTrozo(char frase[], int inicio, int fin);

int main()

{
	char num[1000];
	//int a = 0;
	int resu = 0;
	//int dato;

	printf("Introduce una frase formados por 0 o 1:\n");

	gets_s(num);
	for (int i = 0, k = 8; num[i] != '\0' && num[k] != '\0'; i+= 8, k += 8)
	{
		char* trozo = cogerTrozo(num, i, k);
		resu = bin2ascii(trozo);
		printf("%c", resu);

	}

	return 0;
}

char bin2ascii(char bin[9]) 
{
	int resu = 0, i = 0;
	while (bin[i] != '\0')
	{
		if (bin[i] == '1')
		{
			resu += pow(2, 7 - i);
		}
		i++;
	}
	return resu;
}
char* cogerTrozo(char frase[], int inicio, int fin)
{
	char* trozo;
	int distancia = fin - inicio;

	trozo = (char*)calloc(distancia + 1, 1);
	if (trozo != NULL)
	{
		for (int i = 0; i < distancia; i++)
		{
			*(trozo + i) = frase[inicio + i];
		}
		return trozo;
	}
}



// De Texto a binario 

#include<stdio.h>
#include <malloc.h>

char* convertir(int numero)
{
	char* out;
	int i = 0;

	out = (char*)calloc(9, sizeof(char*));
	if (out != NULL)
	{
		//inicio a 0s para tener siempre un binario de 8 bits
		for (int i = 0; i < 8; i++)
		{
			*(out + i) = '0';
		}

		//paso de int a binario
		while (numero > 0)
		{
			if (numero % 2 == 0)
			{
				*(out + 7 - i) = '0';
			}
			else
			{
				*(out + 7 - i) = '1';
			}
			numero = numero / 2;
			for (int i = *out - 1; i >= 0; i--);
			{
				i++;
			}
		}
		return out;
	}
	else
	{
		printf("No hay memoria suficiente");
	}
}

void main()
{
	char numero;
	char* numBinario;
	char ASCII[2000];
	int i = 0;

	printf("Escribe un texto u oracion con el lenguaje Ascii\n");

	gets_s(ASCII);
	getchar;

	numBinario = (char*)calloc(9, sizeof(char));

	while (ASCII[i] != '\0') 
	{
		numBinario = convertir((int)ASCII[i]);
		puts(numBinario);
		i++;
	}

	free(numBinario);
}
