
#include <stdio.h> 
#include <string.h>
#include <stdlib.h>
#include <iostream>

using namespace std;
int compare(char a[], char b[]);

int main()
{
	char Morse[48][7];
	char Simbolos[48];
	char opcion = 0;

	int i, j;

	char l[37] = { 'a','b','c','d','e','f','g','h','i',
		'j','k','l','m','n','o','p','q','r','s','t',
		'u','v','w','x','y','z','0','1','2','3','4',
		'5','6','7','8','9',' ' };
	char m[37][7] = { {".-"}, {"-..."}, {"-.-."}, {"-.."},
		{"."}, {"..-."}, {"--."}, {"...."}, {".."},
		{".---"}, {"-.-"}, {".-.."}, {"--"}, {"-."},
		{"---"}, {".--."}, {"--.-"}, {".-." }, { "..." },
		{"-"}, {"..-"}, {"...-"}, {".--"}, {"-..-"},
		{"-.--"}, {"--.."}, {"-----"}, {".----"}, {"..---"},
		{"...--"}, {"....-"}, {"....."}, {"-...."}, {"--..."},
		{"---.."}, {"----."},{"/"} };

	char cadena[2000]{};

	do
	{
		cout << "\n\nMenu de Opciones" << endl;
		cout << "a. Espa\xA4ol a morse" << endl;
		cout << "b. Morse a  espa\xA4ol" << endl;
		cout << "c. SALIR" << endl;
		cout << "\nIngrese una opcion: ";
		cin >> opcion;

		switch (opcion)
		{
		case 'a': //espa単ol a morse;

			printf("Escribe un texto u oracion que quieras traducir a codigo morse:\n");
			getchar();
			gets_s(cadena);


			for (i = 0; cadena[i] != '\0'; i++)
			{
				for (j = 0; j < 37; j++)
					if (cadena[i] == l[j])
					{
						for (int k = 0; m[j][k] != '\0'; k++)
						{
							printf("%c", m[j][k]);

						}
						printf(" ");
						break;
					}
			}

			break;


		case 'b'://morse a espa単ol

		{
			int i = 0;
			printf("Escribe un texto u oracion que quieras traducir a codigo espa単ol:\n");
			getchar();
			gets_s(cadena);
			int distSpacio = 0;

			while (cadena[i] != '\0')
			{
				// cuento cuantos caracteres hay entre espacio
				while (cadena[i + distSpacio] != ' ' && cadena[i + distSpacio] != '\0')
				{
					// si no es espacio continua incrementando, cogera los simbolos morse que correscponde a 1 letra
					distSpacio++;
				}
				// necesitamos una variable temporal para almacenar el morse// + 1 por el '\0'
				char* temp;
				temp = (char*)calloc(distSpacio, 1);
				if (temp != NULL)
				{
					//printf("El tama単o de tem es %d, dist es %d\n", sizeof(temp), distSpacio);
					//volvemos hacia atras capturando el morse que corresponde a 1 letra
					for (int j = distSpacio; j > 0; j--)
					{
						*(temp + distSpacio - j) = cadena[i + distSpacio - j];
						//puts(temp);
					}
					// comparamos el obtenido con el que esta ordenado, m
					for (int x = 0; x < 37; x++)
					{
						if (compare(temp, m[x]) == 1)//son iguales
						{
							printf("%c", l[x]);
							break;
						}

					}
					i += distSpacio + 1;
					distSpacio = 0;
					free(temp);
				}
				else
				{
					printf("\nERROR NO SE PUEDE ALOCAR MEMORIA\n");
				}

			}
			break;
		}
		}
	} while (opcion != 'c');
	


}
int compare(char a[], char b[])
{
	for (int k = 0; a[k] == '.' || a[k] == '-' || b[k] == '.' || b[k] == '-'; k++)
	{
		if (a[k] != b[k])
		{
			return 0;
		}
		else
		{
			continue;
		}
	}
	return 1;
}
